package exhibitions

import (
    "kristin-gerber/internal/model"
    "strconv"
)

templ ExhibitionDetailPage(exhibition model.Exhibition) {
    <div class="w-full">
        <div class="pb-6">
            <button onclick="history.back()">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-10 stroke-[1.25] hover:scale-125 transition-transform duration-200">
                    <path stroke-linecap="round" stroke-linejoin="round" d="m11.25 9-3 3m0 0 3 3m-3-3h7.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
                </svg>
            </button>
        </div>
        <div>
            <h2>{ exhibition.Title }</h2>
            <h2>{ exhibition.Location }</h2>
        </div>
        <div class="my-8"
             x-data="{
                 currentIndex: 0,
                 totalImages: 0,
                 intervalId: null,
                 init() {
                     this.totalImages = parseInt($el.dataset.totalImages);
                     if (this.totalImages > 1) {
                        this.autoAdvance()
                    }
                 },
                 autoAdvance() {
                    this.intervalId = setInterval(() => {
                        if (this.currentIndex < this.totalImages - 1) {
                            this.currentIndex++;
                        } else {
                            this.currentIndex = 0;
                        }
                    }, 5000);
                 },
                 resetTimer() {
                    if (this.intervalId) { clearInterval(this.intervalId); }
                    if (this.totalImages > 1) { this.autoAdvance(); }
                 }
             }"
             data-total-images={ strconv.Itoa(len(exhibition.Details.Images)) }
        >
            <div class="relative inline-block w-full">
                <!-- Images -->
                for i, image := range exhibition.Details.Images {
                    <div x-show={ "currentIndex === " + strconv.Itoa(i) } class="flex items-center justify-center w-full">
                        <img src={ image.Src } alt={ image.Alt } class="h-[333px] sm:h-[550px] md:h-[650px] lg:h-[800px] object-contain"/>
                    </div>
                }
                <!-- Left Navigation Area - cursor changes to left arrow -->
                <div class="absolute left-0 top-0 w-1/2 h-full cursor-[url(/static/icons/arrow-left.png),_pointer]"
                     @click={ "currentIndex = currentIndex > 0 ? currentIndex - 1 : totalImages - 1; resetTimer()" }>
                </div>
                <!-- Right Navigation Area - cursor changes to right arrow -->
                <div class="absolute right-0 top-0 w-1/2 h-full cursor-[url(/static/icons/arrow-right.png),_pointer]"
                     @click={ "currentIndex = currentIndex < totalImages - 1  ? currentIndex + 1 : 0; resetTimer()" }>
                </div>
            </div>
            <!-- Dot Navigation -->
            <div class="flex justify-center mt-4 space-x-2">
                for i := range exhibition.Details.Images {
                    <button
                        @click={ "currentIndex = " + strconv.Itoa(i) }
                        class="w-2.5 h-2.5 rounded-full focus:outline-none transition-colors"
                        :class={ "currentIndex === " + strconv.Itoa(i) + " ? 'bg-gray-700' : 'bg-gray-300'" }
                    ></button>
                }
            </div>
        </div>
        <div>
            <div class="uppercase tracking-wide">
                <h2>{ exhibition.Title }</h2>
            </div>
            <div class="grid md:grid-cols-6">
                <p class="col-span-5 whitespace-pre-line my-4">{ exhibition.Details.Description }</p>
            </div>
            <div>
            </div>
        </div>
    </div>
}
